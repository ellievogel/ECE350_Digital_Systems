$date
	Thu Jan 16 15:50:59 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module mux_8_tb $end
$var wire 32 ! out [31:0] $end
$var reg 32 " in0 [31:0] $end
$var reg 32 # in1 [31:0] $end
$var reg 32 $ in2 [31:0] $end
$var reg 32 % in3 [31:0] $end
$var reg 32 & in4 [31:0] $end
$var reg 32 ' in5 [31:0] $end
$var reg 32 ( in6 [31:0] $end
$var reg 32 ) in7 [31:0] $end
$var reg 3 * select [2:0] $end
$scope module mux $end
$var wire 32 + in0 [31:0] $end
$var wire 32 , in1 [31:0] $end
$var wire 32 - in2 [31:0] $end
$var wire 32 . in3 [31:0] $end
$var wire 32 / in4 [31:0] $end
$var wire 32 0 in5 [31:0] $end
$var wire 32 1 in6 [31:0] $end
$var wire 32 2 in7 [31:0] $end
$var wire 3 3 select [2:0] $end
$var wire 32 4 w2 [31:0] $end
$var wire 32 5 w1 [31:0] $end
$var wire 32 6 out [31:0] $end
$scope module first_bottom $end
$var wire 32 7 in0 [31:0] $end
$var wire 32 8 in1 [31:0] $end
$var wire 32 9 in2 [31:0] $end
$var wire 32 : in3 [31:0] $end
$var wire 2 ; select [1:0] $end
$var wire 32 < w2 [31:0] $end
$var wire 32 = w1 [31:0] $end
$var wire 32 > out [31:0] $end
$scope module first_bottom $end
$var wire 32 ? in0 [31:0] $end
$var wire 32 @ in1 [31:0] $end
$var wire 1 A select $end
$var wire 32 B out [31:0] $end
$upscope $end
$scope module first_top $end
$var wire 32 C in0 [31:0] $end
$var wire 32 D in1 [31:0] $end
$var wire 1 E select $end
$var wire 32 F out [31:0] $end
$upscope $end
$scope module second $end
$var wire 32 G in0 [31:0] $end
$var wire 32 H in1 [31:0] $end
$var wire 1 I select $end
$var wire 32 J out [31:0] $end
$upscope $end
$upscope $end
$scope module first_top $end
$var wire 32 K in0 [31:0] $end
$var wire 32 L in1 [31:0] $end
$var wire 32 M in2 [31:0] $end
$var wire 32 N in3 [31:0] $end
$var wire 2 O select [1:0] $end
$var wire 32 P w2 [31:0] $end
$var wire 32 Q w1 [31:0] $end
$var wire 32 R out [31:0] $end
$scope module first_bottom $end
$var wire 32 S in0 [31:0] $end
$var wire 32 T in1 [31:0] $end
$var wire 1 U select $end
$var wire 32 V out [31:0] $end
$upscope $end
$scope module first_top $end
$var wire 32 W in0 [31:0] $end
$var wire 32 X in1 [31:0] $end
$var wire 1 Y select $end
$var wire 32 Z out [31:0] $end
$upscope $end
$scope module second $end
$var wire 32 [ in0 [31:0] $end
$var wire 32 \ in1 [31:0] $end
$var wire 1 ] select $end
$var wire 32 ^ out [31:0] $end
$upscope $end
$upscope $end
$scope module second $end
$var wire 32 _ in0 [31:0] $end
$var wire 32 ` in1 [31:0] $end
$var wire 1 a select $end
$var wire 32 b out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1 b
0a
b10000 `
b1 _
b1 ^
0]
b100 \
b1 [
b1 Z
0Y
b10 X
b1 W
b100 V
0U
b1000 T
b100 S
b1 R
b1 Q
b100 P
b0 O
b1000 N
b100 M
b10 L
b1 K
b10000 J
0I
b1000000 H
b10000 G
b10000 F
0E
b100000 D
b10000 C
b1000000 B
0A
b10000000 @
b1000000 ?
b10000 >
b10000 =
b1000000 <
b0 ;
b10000000 :
b1000000 9
b100000 8
b10000 7
b1 6
b1 5
b10000 4
b0 3
b10000000 2
b1000000 1
b100000 0
b10000 /
b1000 .
b100 -
b10 ,
b1 +
b0 *
b10000000 )
b1000000 (
b100000 '
b10000 &
b1000 %
b100 $
b10 #
b1 "
b1 !
$end
#100
b10 !
b10 6
b10 b
b10 5
b10 R
b10 ^
b10 _
b100000 4
b100000 >
b100000 J
b100000 `
b10 Q
b10 Z
b10 [
b100000 =
b100000 F
b100000 G
1Y
1E
b1 O
b1 ;
b1 *
b1 3
#200
b1000 !
b1000 6
b1000 b
b1 Q
b1 Z
b1 [
b1000 P
b1000 V
b1000 \
b1000 5
b1000 R
b1000 ^
b1000 _
b10000 =
b10000 F
b10000 G
b10000000 <
b10000000 B
b10000000 H
b10000000 4
b10000000 >
b10000000 J
b10000000 `
0Y
1U
1]
0E
1A
1I
b10 O
b10 ;
b10 *
b10 3
#300
b10 Q
b10 Z
b10 [
b100000 =
b100000 F
b100000 G
1Y
1E
b11 O
b11 ;
b11 *
b11 3
#400
b1 Q
b1 Z
b1 [
b100 P
b100 V
b100 \
b1 5
b1 R
b1 ^
b1 _
b10000 =
b10000 F
b10000 G
b1000000 <
b1000000 B
b1000000 H
b10000 4
b10000 >
b10000 J
b10000 `
0Y
0U
0]
0E
0A
0I
b10000 !
b10000 6
b10000 b
b0 O
b0 ;
1a
b100 *
b100 3
#500
b100000 !
b100000 6
b100000 b
b10 5
b10 R
b10 ^
b10 _
b100000 4
b100000 >
b100000 J
b100000 `
b10 Q
b10 Z
b10 [
b100000 =
b100000 F
b100000 G
1Y
1E
b1 O
b1 ;
b101 *
b101 3
#600
b10000000 !
b10000000 6
b10000000 b
b1 Q
b1 Z
b1 [
b1000 P
b1000 V
b1000 \
b1000 5
b1000 R
b1000 ^
b1000 _
b10000 =
b10000 F
b10000 G
b10000000 <
b10000000 B
b10000000 H
b10000000 4
b10000000 >
b10000000 J
b10000000 `
0Y
1U
1]
0E
1A
1I
b10 O
b10 ;
b110 *
b110 3
#700
b10 Q
b10 Z
b10 [
b100000 =
b100000 F
b100000 G
1Y
1E
b11 O
b11 ;
b111 *
b111 3
#800
b1 Q
b1 Z
b1 [
b100 P
b100 V
b100 \
b1 5
b1 R
b1 ^
b1 _
b10000 =
b10000 F
b10000 G
b1000000 <
b1000000 B
b1000000 H
b10000 4
b10000 >
b10000 J
b10000 `
0Y
0U
0]
0E
0A
0I
b1 !
b1 6
b1 b
b0 O
b0 ;
0a
b0 *
b0 3
