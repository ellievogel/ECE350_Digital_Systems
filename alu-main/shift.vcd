$date
	Tue Jan 28 19:02:30 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_tb $end
$var wire 1 ! LT $end
$var wire 1 " NE $end
$var wire 1 # OVF $end
$var wire 32 $ Res [31:0] $end
$var reg 32 % A [31:0] $end
$var reg 5 & ALU_OP [4:0] $end
$var reg 32 ' B [31:0] $end
$var reg 1 ( ExpLT $end
$var reg 1 ) ExpNE $end
$var reg 1 * ExpOVF $end
$var reg 32 + ExpRes [31:0] $end
$var reg 5 , Shift_Amt [4:0] $end
$var reg 128 - actFileName [127:0] $end
$var reg 128 . diffFileName [127:0] $end
$var reg 128 / expFileName [127:0] $end
$var reg 128 0 testName [127:0] $end
$var integer 32 1 actFile [31:0] $end
$var integer 32 2 diffFile [31:0] $end
$var integer 32 3 errors [31:0] $end
$var integer 32 4 expFile [31:0] $end
$var integer 32 5 expScan [31:0] $end
$var integer 32 6 tests [31:0] $end
$scope module Tester $end
$var wire 5 7 ctrl_ALUopcode [4:0] $end
$var wire 5 8 ctrl_shiftamt [4:0] $end
$var wire 32 9 data_operandA [31:0] $end
$var wire 32 : data_operandB [31:0] $end
$var wire 1 ! isLessThan $end
$var wire 1 " isNotEqual $end
$var wire 1 # overflow $end
$var wire 1 ; dummy $end
$var wire 32 < data_result [31:0] $end
$scope module cla_unit $end
$var wire 32 = A [31:0] $end
$var wire 32 > B [31:0] $end
$var wire 1 ? Cin $end
$var wire 1 @ Cin_16 $end
$var wire 1 A Cin_24 $end
$var wire 1 B Cin_8 $end
$var wire 1 ; Cout $end
$var wire 1 C p0c0 $end
$var wire 1 D p1g0 $end
$var wire 1 E p1p0c0 $end
$var wire 1 F p2g1 $end
$var wire 1 G p2p1g0 $end
$var wire 1 H p2p1p0cin $end
$var wire 1 I p3g2 $end
$var wire 1 J p3p2g1 $end
$var wire 1 K p3p2p1g0 $end
$var wire 1 L p3p2p1p0cin $end
$var wire 32 M ps [31:0] $end
$var wire 32 N gs [31:0] $end
$var wire 1 O big_P_3 $end
$var wire 1 P big_P_2 $end
$var wire 1 Q big_P_1 $end
$var wire 1 R big_P_0 $end
$var wire 1 S big_G_3 $end
$var wire 1 T big_G_2 $end
$var wire 1 U big_G_1 $end
$var wire 1 V big_G_0 $end
$var wire 32 W S [31:0] $end
$scope module cla_block_0_7 $end
$var wire 8 X A [7:0] $end
$var wire 8 Y B [7:0] $end
$var wire 1 ? Cin $end
$var wire 1 Z Cin_P0P1P2P3P4 $end
$var wire 1 [ Cin_P0P1P2P3P4P5 $end
$var wire 1 \ Cin_P0P1P2P3P4P5P6 $end
$var wire 1 ] Cin_P0P1P2P3P4P5P6P7 $end
$var wire 1 ^ Cin_P0_P1_P2 $end
$var wire 1 _ G0_P1P2P3P4 $end
$var wire 1 ` G0_P1P2P3P4P5 $end
$var wire 1 a G0_P1P2P3P4P5P6 $end
$var wire 1 b G0_P1P2P3P4P5P6P7 $end
$var wire 1 c G0_P1_P2 $end
$var wire 1 d G1_P2 $end
$var wire 1 e G1_P2P3P4 $end
$var wire 1 f G1_P2P3P4P5 $end
$var wire 1 g G1_P2P3P4P5P6 $end
$var wire 1 h G1_P2P3P4P5P6P7 $end
$var wire 1 i G2_P3P4 $end
$var wire 1 j G2_P3P4P5 $end
$var wire 1 k G2_P3P4P5P6 $end
$var wire 1 l G2_P3P4P5P6P7 $end
$var wire 1 m G3_P4 $end
$var wire 1 n G3_P4P5 $end
$var wire 1 o G3_P4P5P6 $end
$var wire 1 p G3_P4P5P6P7 $end
$var wire 1 q G4_P5 $end
$var wire 1 r G4_P5P6 $end
$var wire 1 s G4_P5P6P7 $end
$var wire 1 t G5_P6 $end
$var wire 1 u G5_P6P7 $end
$var wire 1 v G6_P7 $end
$var wire 8 w Gs [7:0] $end
$var wire 1 x P0_C0 $end
$var wire 1 y P1_C1 $end
$var wire 8 z Ps [7:0] $end
$var wire 1 V big_G $end
$var wire 1 R big_P $end
$var wire 1 { cin_1 $end
$var wire 1 | cin_2 $end
$var wire 1 } cin_3 $end
$var wire 1 ~ cin_4 $end
$var wire 1 !" cin_5 $end
$var wire 1 "" cin_6 $end
$var wire 1 #" cin_7 $end
$var wire 8 $" S [7:0] $end
$upscope $end
$scope module cla_block_16_23 $end
$var wire 8 %" A [7:0] $end
$var wire 8 &" B [7:0] $end
$var wire 1 @ Cin $end
$var wire 1 '" Cin_P0P1P2P3P4 $end
$var wire 1 (" Cin_P0P1P2P3P4P5 $end
$var wire 1 )" Cin_P0P1P2P3P4P5P6 $end
$var wire 1 *" Cin_P0P1P2P3P4P5P6P7 $end
$var wire 1 +" Cin_P0_P1_P2 $end
$var wire 1 ," G0_P1P2P3P4 $end
$var wire 1 -" G0_P1P2P3P4P5 $end
$var wire 1 ." G0_P1P2P3P4P5P6 $end
$var wire 1 /" G0_P1P2P3P4P5P6P7 $end
$var wire 1 0" G0_P1_P2 $end
$var wire 1 1" G1_P2 $end
$var wire 1 2" G1_P2P3P4 $end
$var wire 1 3" G1_P2P3P4P5 $end
$var wire 1 4" G1_P2P3P4P5P6 $end
$var wire 1 5" G1_P2P3P4P5P6P7 $end
$var wire 1 6" G2_P3P4 $end
$var wire 1 7" G2_P3P4P5 $end
$var wire 1 8" G2_P3P4P5P6 $end
$var wire 1 9" G2_P3P4P5P6P7 $end
$var wire 1 :" G3_P4 $end
$var wire 1 ;" G3_P4P5 $end
$var wire 1 <" G3_P4P5P6 $end
$var wire 1 =" G3_P4P5P6P7 $end
$var wire 1 >" G4_P5 $end
$var wire 1 ?" G4_P5P6 $end
$var wire 1 @" G4_P5P6P7 $end
$var wire 1 A" G5_P6 $end
$var wire 1 B" G5_P6P7 $end
$var wire 1 C" G6_P7 $end
$var wire 8 D" Gs [7:0] $end
$var wire 1 E" P0_C0 $end
$var wire 1 F" P1_C1 $end
$var wire 8 G" Ps [7:0] $end
$var wire 1 T big_G $end
$var wire 1 P big_P $end
$var wire 1 H" cin_1 $end
$var wire 1 I" cin_2 $end
$var wire 1 J" cin_3 $end
$var wire 1 K" cin_4 $end
$var wire 1 L" cin_5 $end
$var wire 1 M" cin_6 $end
$var wire 1 N" cin_7 $end
$var wire 8 O" S [7:0] $end
$upscope $end
$scope module cla_block_24_31 $end
$var wire 8 P" A [7:0] $end
$var wire 8 Q" B [7:0] $end
$var wire 1 A Cin $end
$var wire 1 R" Cin_P0P1P2P3P4 $end
$var wire 1 S" Cin_P0P1P2P3P4P5 $end
$var wire 1 T" Cin_P0P1P2P3P4P5P6 $end
$var wire 1 U" Cin_P0P1P2P3P4P5P6P7 $end
$var wire 1 V" Cin_P0_P1_P2 $end
$var wire 1 W" G0_P1P2P3P4 $end
$var wire 1 X" G0_P1P2P3P4P5 $end
$var wire 1 Y" G0_P1P2P3P4P5P6 $end
$var wire 1 Z" G0_P1P2P3P4P5P6P7 $end
$var wire 1 [" G0_P1_P2 $end
$var wire 1 \" G1_P2 $end
$var wire 1 ]" G1_P2P3P4 $end
$var wire 1 ^" G1_P2P3P4P5 $end
$var wire 1 _" G1_P2P3P4P5P6 $end
$var wire 1 `" G1_P2P3P4P5P6P7 $end
$var wire 1 a" G2_P3P4 $end
$var wire 1 b" G2_P3P4P5 $end
$var wire 1 c" G2_P3P4P5P6 $end
$var wire 1 d" G2_P3P4P5P6P7 $end
$var wire 1 e" G3_P4 $end
$var wire 1 f" G3_P4P5 $end
$var wire 1 g" G3_P4P5P6 $end
$var wire 1 h" G3_P4P5P6P7 $end
$var wire 1 i" G4_P5 $end
$var wire 1 j" G4_P5P6 $end
$var wire 1 k" G4_P5P6P7 $end
$var wire 1 l" G5_P6 $end
$var wire 1 m" G5_P6P7 $end
$var wire 1 n" G6_P7 $end
$var wire 8 o" Gs [7:0] $end
$var wire 1 p" P0_C0 $end
$var wire 1 q" P1_C1 $end
$var wire 8 r" Ps [7:0] $end
$var wire 1 S big_G $end
$var wire 1 O big_P $end
$var wire 1 s" cin_1 $end
$var wire 1 t" cin_2 $end
$var wire 1 u" cin_3 $end
$var wire 1 v" cin_4 $end
$var wire 1 w" cin_5 $end
$var wire 1 x" cin_6 $end
$var wire 1 y" cin_7 $end
$var wire 8 z" S [7:0] $end
$upscope $end
$scope module cla_block_8_15 $end
$var wire 8 {" A [7:0] $end
$var wire 8 |" B [7:0] $end
$var wire 1 B Cin $end
$var wire 1 }" Cin_P0P1P2P3P4 $end
$var wire 1 ~" Cin_P0P1P2P3P4P5 $end
$var wire 1 !# Cin_P0P1P2P3P4P5P6 $end
$var wire 1 "# Cin_P0P1P2P3P4P5P6P7 $end
$var wire 1 ## Cin_P0_P1_P2 $end
$var wire 1 $# G0_P1P2P3P4 $end
$var wire 1 %# G0_P1P2P3P4P5 $end
$var wire 1 &# G0_P1P2P3P4P5P6 $end
$var wire 1 '# G0_P1P2P3P4P5P6P7 $end
$var wire 1 (# G0_P1_P2 $end
$var wire 1 )# G1_P2 $end
$var wire 1 *# G1_P2P3P4 $end
$var wire 1 +# G1_P2P3P4P5 $end
$var wire 1 ,# G1_P2P3P4P5P6 $end
$var wire 1 -# G1_P2P3P4P5P6P7 $end
$var wire 1 .# G2_P3P4 $end
$var wire 1 /# G2_P3P4P5 $end
$var wire 1 0# G2_P3P4P5P6 $end
$var wire 1 1# G2_P3P4P5P6P7 $end
$var wire 1 2# G3_P4 $end
$var wire 1 3# G3_P4P5 $end
$var wire 1 4# G3_P4P5P6 $end
$var wire 1 5# G3_P4P5P6P7 $end
$var wire 1 6# G4_P5 $end
$var wire 1 7# G4_P5P6 $end
$var wire 1 8# G4_P5P6P7 $end
$var wire 1 9# G5_P6 $end
$var wire 1 :# G5_P6P7 $end
$var wire 1 ;# G6_P7 $end
$var wire 8 <# Gs [7:0] $end
$var wire 1 =# P0_C0 $end
$var wire 1 ># P1_C1 $end
$var wire 8 ?# Ps [7:0] $end
$var wire 1 U big_G $end
$var wire 1 Q big_P $end
$var wire 1 @# cin_1 $end
$var wire 1 A# cin_2 $end
$var wire 1 B# cin_3 $end
$var wire 1 C# cin_4 $end
$var wire 1 D# cin_5 $end
$var wire 1 E# cin_6 $end
$var wire 1 F# cin_7 $end
$var wire 8 G# S [7:0] $end
$upscope $end
$scope module create_gs $end
$var wire 32 H# A [31:0] $end
$var wire 32 I# B [31:0] $end
$var wire 32 J# result [31:0] $end
$upscope $end
$scope module create_ps $end
$var wire 32 K# A [31:0] $end
$var wire 32 L# B [31:0] $end
$var wire 32 M# result [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 M#
b0 L#
b0 K#
b0 J#
b0 I#
b0 H#
b0 G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
b0 ?#
0>#
0=#
b0 <#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
b0 |"
b0 {"
b0 z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
b0 r"
0q"
0p"
b0 o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
b0 Q"
b0 P"
b0 O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
b0 G"
0F"
0E"
b0 D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
b0 &"
b0 %"
b0 $"
0#"
0""
0!"
0~
0}
0|
0{
b0 z
0y
0x
b0 w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
b0 Y
b0 X
b0 W
0V
0U
0T
0S
0R
0Q
0P
0O
b0 N
b0 M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
b0 >
b0 =
b0 <
0;
b0 :
b0 9
b0 8
b0 7
b0 6
bx 5
b0 4
b0 3
bx 2
bx 1
b111001101101000011010010110011001110100 0
b1110011011010000110100101100110011101000101111101100101011110000111000000101110011000110111001101110110 /
b111001101101000011010010110011001110100010111110110010001101001011001100110011000101110011000110111001101110110 .
b1110011011010000110100101100110011101000101111101100001011000110111010001110101011000010110110000101110011000110111001101110110 -
b0 ,
b0 +
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
0#
0"
0!
$end
